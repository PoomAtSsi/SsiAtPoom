<?xml version= "1.0" encoding= "UTF-8" ?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

						
						
<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	
	<context:component-scan base-package="org.poom.sap.**.controller" />
	<context:component-scan base-package="org.poom.sap" />
	
	<aop:aspectj-autoproxy/>
    <beans:bean id="loggerAspect" class="org.poom.sap.logger.LoggerAspect" />
	
	
	
	
	
<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/css/**" location="/resources/css/" /> 
	<resources mapping="/images/**" location="/resources/images/" /> 
	<resources mapping="/js/**" location="/resources/js/" /> 
	<resources mapping="/resources/**" location="/resources/" /> 
	
	
<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class= "org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<beans:property name= "prefix" value= "/WEB-INF/views/" />
		<beans:property name= "suffix" value= ".jsp" />
	</beans:bean>
	
	<!-- 내기능 시작 -->
	<beans:bean id="jsonMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="objectMapper" ref="jsonMapper" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.GsonHttpMessageConverter">
   </beans:bean>
	<!-- 내기능 끝 -->
	
	 <!-- 파일업로드 -->
	 <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
        <!-- max size of file in memory (in bytes) -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
    </beans:bean>
    <!-- 파일업로드 끝 -->
    
	<interceptors>
		<interceptor>
			<mapping path= "/**" />
			<beans:bean id= "loggerInterceptor"
						class= "org.poom.sap.logger.LoggerInterceptor" >
			</beans:bean>
		</interceptor>
	</interceptors>



<!-- MultipartResolver 설정 -->
<!-- 	<beans:bean id="multipartResolver" 
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000" />
		<beans:property name="maxInMemorySize" value="100000000" />
	</beans:bean> -->


	
</beans:beans>



 